<h1 id="adr046-postgres-service-plans">ADR046: Postgres Service Plans</h1><h2 id="context">Context</h2><p>GOV.UK PaaS runs a fork of the <a href="https://github.com/alphagov/paas-rds-broker">RDS Service Broker</a> and uses it to provide Postgres database services
to its tenants.</p>
<p>As of writing, our service plan &lsquo;menu&rsquo; looks like this:</p>
<div class="highlight"><pre class="highlight plaintext" tabindex="0"><code>$ cf marketplace -e postgres
Getting service plan information for service offering postgres in org gds-tech-ops / space sandbox as 117196824971928474330...

broker: rds-broker
   plan                            description                                                                                                                                                                          free or paid   costs   available
   tiny-unencrypted-10             5GB Storage, NOT BACKED UP, Dedicated Instance, Max 50 Concurrent Connections. Postgres Version 10. DB Instance Class: db.t2.micro. Free for trial orgs. Costs for billable orgs.    free                   yes
   small-10                        20GB Storage, Dedicated Instance, Storage Encrypted, Max 200 Concurrent Connections. Postgres Version 10. DB Instance Class: db.t2.small.                                            paid                   yes
   small-ha-10                     20GB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 200 Concurrent Connections. Postgres Version 10. DB Instance Class: db.t2.small.                          paid                   yes
   medium-10                       100GB Storage, Dedicated Instance, Storage Encrypted, Max 500 Concurrent Connections. Postgres Version 10. DB Instance Class: db.m4.large.                                           paid                   yes
   medium-ha-10                    100GB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 500 Concurrent Connections. Postgres Version 10. DB Instance Class: db.m4.large.                         paid                   yes
   large-10                        512GB Storage, Dedicated Instance, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 10. DB Instance Class: db.m4.2xlarge.                                        paid                   yes
   large-ha-10                     512GB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 10. DB Instance Class: db.m4.2xlarge.                      paid                   yes
   xlarge-10                       2TB Storage, Dedicated Instance, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 10. DB Instance Class: db.m4.4xlarge.                                          paid                   yes
   xlarge-ha-10                    2TB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 10. DB Instance Class: db.m4.4xlarge.                        paid                   yes
   tiny-unencrypted-11             5GB Storage, NOT BACKED UP, Dedicated Instance, Max 50 Concurrent Connections. Postgres Version 11. DB Instance Class: db.t3.micro. Free for trial orgs. Costs for billable orgs.    free                   yes
   small-11                        100GB Storage, Dedicated Instance, Storage Encrypted, Max 200 Concurrent Connections. Postgres Version 11. DB Instance Class: db.t3.small.                                           paid                   yes
   small-ha-11                     100GB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 200 Concurrent Connections. Postgres Version 11. DB Instance Class: db.t3.small.                         paid                   yes
   medium-11                       100GB Storage, Dedicated Instance, Storage Encrypted, Max 500 Concurrent Connections. Postgres Version 11. DB Instance Class: db.m5.large.                                           paid                   yes
   medium-ha-11                    100GB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 500 Concurrent Connections. Postgres Version 11. DB Instance Class: db.m5.large.                         paid                   yes
   large-11                        512GB Storage, Dedicated Instance, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 11. DB Instance Class: db.m5.2xlarge.                                        paid                   yes
   large-ha-11                     512GB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 11. DB Instance Class: db.m5.2xlarge.                      paid                   yes
   xlarge-11                       2TB Storage, Dedicated Instance, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 11. DB Instance Class: db.m5.4xlarge.                                          paid                   yes
   xlarge-ha-11                    2TB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 11. DB Instance Class: db.m5.4xlarge.                        paid                   yes
   tiny-unencrypted-10-high-iops   25GB Storage, NOT BACKED UP, Dedicated Instance, Max 50 Concurrent Connections. Postgres Version 10. DB Instance Class: db.t3.micro. Free for trial orgs. Costs for billable orgs.   free                   yes
   small-10-high-iops              100GB Storage, Dedicated Instance, Storage Encrypted, Max 200 Concurrent Connections. Postgres Version 10. DB Instance Class: db.t3.small.                                           paid                   yes
   small-ha-10-high-iops           100GB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 200 Concurrent Connections. Postgres Version 10. DB Instance Class: db.t3.small.                         paid                   yes
   medium-ha-10-high-iops          500GB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 500 Concurrent Connections. Postgres Version 10. DB Instance Class: db.m5.large.                         paid                   yes
   large-10-high-iops              2.5TB Storage, Dedicated Instance, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 10. DB Instance Class: db.m5.2xlarge.                                        paid                   yes
   large-ha-10-high-iops           2.5TB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 10. DB Instance Class: db.m5.2xlarge.                      paid                   yes
   xlarge-10-high-iops             10TB Storage, Dedicated Instance, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 10. DB Instance Class: db.m5.4xlarge.                                         paid                   yes
   xlarge-ha-10-high-iops          10TB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 10. DB Instance Class: db.m5.4xlarge.                       paid                   yes
   tiny-unencrypted-11-high-iops   25GB Storage, NOT BACKED UP, Dedicated Instance, Max 50 Concurrent Connections. Postgres Version 11. DB Instance Class: db.t3.micro. Free for trial orgs. Costs for billable orgs.   free                   yes
   small-11-high-iops              100GB Storage, Dedicated Instance, Storage Encrypted, Max 200 Concurrent Connections. Postgres Version 11. DB Instance Class: db.t3.small.                                           paid                   yes
   small-ha-11-high-iops           100GB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 200 Concurrent Connections. Postgres Version 11. DB Instance Class: db.t3.small.                         paid                   yes
   medium-11-high-iops             500GB Storage, Dedicated Instance, Storage Encrypted, Max 500 Concurrent Connections. Postgres Version 11. DB Instance Class: db.m5.large.                                           paid                   yes
   medium-ha-11-high-iops          500GB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 500 Concurrent Connections. Postgres Version 11. DB Instance Class: db.m5.large.                         paid                   yes
   large-11-high-iops              2.5TB Storage Storage, Dedicated Instance, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 11. DB Instance Class: db.m5.2xlarge.                                paid                   yes
   large-ha-11-high-iops           2.5TB Storage Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 11. DB Instance Class: db.m5.2xlarge.              paid                   yes
   xlarge-11-high-iops             10TB Storage, Dedicated Instance, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 11. DB Instance Class: db.m5.4xlarge.                                         paid                   yes
   xlarge-ha-11-high-iops          10TB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 11. DB Instance Class: db.m5.4xlarge.                       paid                   yes
   medium-10-high-iops             500GB Storage, Dedicated Instance, Storage Encrypted, Max 500 Concurrent Connections. Postgres Version 10. DB Instance Class: db.m5.large.                                           paid                   yes
   tiny-unencrypted-12             5GB Storage, NOT BACKED UP, Dedicated Instance, Max 50 Concurrent Connections. Postgres Version 12. DB Instance Class: db.t3.micro. Free for trial orgs. Costs for billable orgs.    free                   yes
   small-12                        100GB Storage, Dedicated Instance, Storage Encrypted, Max 200 Concurrent Connections. Postgres Version 12. DB Instance Class: db.t3.small.                                           paid                   yes
   small-ha-12                     100GB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 200 Concurrent Connections. Postgres Version 12. DB Instance Class: db.t3.small.                         paid                   yes
   medium-12                       100GB Storage, Dedicated Instance, Storage Encrypted, Max 500 Concurrent Connections. Postgres Version 12. DB Instance Class: db.m5.large.                                           paid                   yes
   medium-ha-12                    100GB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 500 Concurrent Connections. Postgres Version 12. DB Instance Class: db.m5.large.                         paid                   yes
   large-12                        512GB Storage, Dedicated Instance, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 12. DB Instance Class: db.m5.2xlarge.                                        paid                   yes
   large-ha-12                     512GB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 12. DB Instance Class: db.m5.2xlarge.                      paid                   yes
   xlarge-12                       2TB Storage, Dedicated Instance, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 12. DB Instance Class: db.m5.4xlarge.                                          paid                   yes
   xlarge-ha-12                    2TB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 12. DB Instance Class: db.m5.4xlarge.                        paid                   yes
   tiny-unencrypted-12-high-iops   25GB Storage, NOT BACKED UP, Dedicated Instance, Max 50 Concurrent Connections. Postgres Version 12. DB Instance Class: db.t3.micro. Free for trial orgs. Costs for billable orgs.   free                   yes
   small-12-high-iops              100GB Storage, Dedicated Instance, Storage Encrypted, Max 200 Concurrent Connections. Postgres Version 12. DB Instance Class: db.t3.small.                                           paid                   yes
   small-ha-12-high-iops           100GB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 200 Concurrent Connections. Postgres Version 12. DB Instance Class: db.t3.small.                         paid                   yes
   medium-12-high-iops             500GB Storage, Dedicated Instance, Storage Encrypted, Max 500 Concurrent Connections. Postgres Version 12. DB Instance Class: db.m5.large.                                           paid                   yes
   medium-ha-12-high-iops          500GB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 500 Concurrent Connections. Postgres Version 12. DB Instance Class: db.m5.large.                         paid                   yes
   large-12-high-iops              2.5TB Storage Storage, Dedicated Instance, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 12. DB Instance Class: db.m5.2xlarge.                                paid                   yes
   large-ha-12-high-iops           2.5TB Storage Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 12. DB Instance Class: db.m5.2xlarge.              paid                   yes
   xlarge-12-high-iops             10TB Storage, Dedicated Instance, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 12. DB Instance Class: db.m5.4xlarge.                                         paid                   yes
   xlarge-ha-12-high-iops          10TB Storage, Dedicated Instance, Highly Available, Storage Encrypted, Max 5000 Concurrent Connections. Postgres Version 12. DB Instance Class: db.m5.4xlarge.                       paid                   yes
</code></pre></div><p>There&rsquo;s some background information needed to understand some decisions made when setting up our plans:
* <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html#EBSVolumeTypes_gp2">AWS&rsquo;s gp2 storage</a> scales at 3 IOPS per GB of volume size, between a base of 100 IOPS at 33.33GB
  disk size up to 16kIOPS at 5,334GB disk size.
* AWS does not provide gp3 storage for RDS.
* <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html">RDS storage</a> does not allow you to decrease storage of a database instance, or increase storage of
  a database instance without adding at least 10%.</p>
<p>We have identified several inconsistencies and issues with the current plans when studying them in
order of volume size.</p>
<h2 id="problems-and-potential-options">Problems and potential options</h2><p>Replacing plans in this section refers to:
* renaming the existing plan to have a <code>-deprecated</code> suffix
* marking it private
* scoping it down to only the existing spaces using it
* creating a new one under its old name, with new configuration</p>
<p>This way, we avoid problems with billing and existing service instances using these plans.</p>
<h3 id="problem-1">Problem 1</h3><p>There is no upgrade path available from <code>medium</code> <code>high-iops</code> plans to <code>large</code> plans, because of the
  RDS 10% storage increase rule - 500GB to 512GB would violate it.
1. We could replace the <code>medium</code> <code>high-iops</code> plans with ones of smaller disk space, say 465GB (<code>⌊512/1.1⌋</code>).
   * This would leave existing users of these plans (6 instances) unable to upgrade (both in terms
     of plan size and database version) without going up to <code>large</code>.
2. We could replace the <code>large</code> plans with ones of larger disk space, say 564GB (<code>⌈512*1.1⌉</code>).</p>
<h3 id="problem-2">Problem 2</h3><p>The <code>small</code> plans are inconsistent - <code>small-10</code> (and <code>small-ha-10</code>) provide 20GB disk space, but
  the Postgres 11 and 12 variants provide 100GB disk space.
1. We could replace the <code>small-11</code>, <code>small-ha-11</code>, <code>small-12</code>, and <code>small-ha-12</code> plans with 20GB
   editions.
   * This would leave existing users of these plans (170 instances) unable to upgrade (both in
     terms of plan size and database version) without going up to <code>small</code> <code>high-iops</code> or <code>medium</code>.
2. We could replace the <code>small-10</code> and <code>small-ha-10</code> plans with 100GB editions.
   * This would make approximately zero sense as they&rsquo;d be identical to the <code>small-10-high-iops</code>
     and <code>small-ha-10-high-iops plans</code>.
3. We could do nothing and leave it be. It&rsquo;s not technically breaking anything irght now.
   * This might create a dilemma when we come to introduce <code>small-13</code> and <code>small-ha-13</code>. Should it
     be 20GB or 100GB? <code>small-13-high-iops</code> and <code>small-ha-13-high-iops</code> will be 100GB so it would
     be illogical, however if we went for 20GB, there would be no <code>small-12</code> -&gt; <code>small-13</code> upgrade path.</p>
<h3 id="problem-3">Problem 3</h3><p>The Postgres engine version is part of the plans themselves. It is not relevant to billing or
particularly how the underlying resource is structed on AWS.</p>

<ol>
<li>We could make it a config option.

<ul>
<li>This might make the broker more complex as we&rsquo;d have to handle existing instances.</li>
</ul></li>
<li>We could do nothing and leave it be.

<ul>
<li>This means a lot of duplication and potential for inconsistency (e.g., as we&rsquo;ve seen between
small-10 and small-12).</li>
</ul></li>
</ol>
<h3 id="problem-4">Problem 4</h3><p>The disk space is part of the plans but this leads to massive jumps in plan whenever you just want
a bit more disk space.
1. We could make it a config option.
   * We&rsquo;d have to factor this into billing.
   * This might make the broker more complex as we&rsquo;d have to handle existing instances.
2. We could do nothing and leave it be.
   * Problem to solve in a future PaaS? Would future PaaS even want to do service plans? Probably,
     but we shouldn&rsquo;t pre-empt it.</p>
<h3 id="problem-5">Problem 5</h3><p>It&rsquo;s not clear that users know there could be legitimate reasons to want to upgrade from
  <code>medium</code> <code>high-iops</code> to <code>large</code> (non-<code>high-iops</code>). If a user doesn&rsquo;t understand the disk space
  &lt;-&gt; IOPS link, they might have <code>medium</code> <code>high-iops</code>, need more RAM/a bigger CPU/more connections,
  and decide straight to <code>large</code> <code>high-iops</code> instead of plain <code>large</code>.
1. We could add IOPS information to each plan&rsquo;s description.
   * These descriptions are already quite wordy and this would make things worse.
2. We could do nothing and leave it be.</p>
<h3 id="problem-6">Problem 6</h3><p>The <code>xlarge</code> <code>high-iops</code> plans provide a disk larger than that needed to achieve maximum
 AWS gp2 IOPS.
1. We could make future xlarge <code>high-iops</code> plans 5,334GB in disk size.
   * However there would then be no upgrade path for the current user.
2. We could do nothing and leave it be.</p>
<h2 id="summary">Summary</h2><p>In conclusion, with the service plan system we&rsquo;ve backed ourselves into a corner with some not very
good ways out.</p>
<h2 id="decision">Decision</h2><p>We will take these actions:
* Problem 1: Action 2 - replace the <code>large</code> plans with 564GB versions
* Problem 2: Action 3 - do nothing for now
* Problem 3: Action 2 - do nothing for now
* Problem 4: Action 2 - do nothing for now
* Problem 5: Action 2 - do nothing for now
* Problem 6: Action 2 - do nothing for now</p>
<h2 id="status">Status</h2><p>Accepted</p>
<h2 id="consequences">Consequences</h2>
<ul>
<li>Users on <code>medium</code> <code>high-iops</code> plans will be able to upgrade to <code>large</code>.</li>
<li>Existing <code>large</code> users will be able to move to the new <code>large</code> plans at will through the usual
service instance update mechanism.</li>
<li>We will effectively introduce new <code>large</code> <code>-deprecated</code> plans which are private to the existing
users.</li>
<li>Various oddities will remain in our current plan &lsquo;menu&rsquo;.</li>
</ul>
