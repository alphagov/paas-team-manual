<h2 id="the-bug">The BUG</h2><p>There is a general bug we have on the PaaS, where sometimes we list users in
the form of the external Google ID we got from an Google&rsquo;s SSO.</p>
<p>This is a difficult bug to fix and has been neglected for a while now&hellip;</p>
<p>This is annoying to us and our users, to establish who these people are&hellip;</p>
<h2 id="about-sso">About SSO</h2><p>When people use Google&rsquo;s SSO to log into PaaS, UAA does take a note of some of
their information. Among those, we get the email address and the person&rsquo;s name.</p>
<p>This essentially means that we can find out who the user is, by asking UAA for
more data.</p>
<h2 id="working-with-an-example">Working with an example</h2><p>We had a need to email a specific user and inform them about their account being
suspended.</p>
<p>The only piece of information we had on this user, was their google ID which was
allocated to an organisation.</p>
<p>You can run:</p>
<div class="highlight"><pre class="highlight shell" tabindex="0"><code>cf curl /v2/organizations/ORG_GUID/users
</code></pre></div><p>Example output:</p>
<div class="highlight"><pre class="highlight json" tabindex="0"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"total_results"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
  </span><span class="nl">"total_pages"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
  </span><span class="nl">"prev_url"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
  </span><span class="nl">"next_url"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
  </span><span class="nl">"resources"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="nl">"metadata"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"guid"</span><span class="p">:</span><span class="w"> </span><span class="s2">"USER_GUID"</span><span class="w">
      </span><span class="p">},</span><span class="w">
      </span><span class="nl">"entity"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"username"</span><span class="p">:</span><span class="w"> </span><span class="s2">"000000000000000000000"</span><span class="w">
      </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div><p>This will give you the list of users. You can filter these resources by the
username you&rsquo;re trying to fish out.</p>
<p>Once you have found the user, obtain their <code>.metadata.guid</code>, you will be able to
fetch the data from UAA regarding that user.</p>
<p>UAA accepts the same token as the CF. The following command includes that token.</p>
<div class="highlight"><pre class="highlight shell" tabindex="0"><code>curl <span class="nt">-H</span> <span class="s2">"Authorization: </span><span class="si">$(</span>cf oauth-token<span class="si">)</span><span class="s2">"</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Accept: application/json'</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
  https://uaa.london.cloud.service.gov.uk/Users/USER_GUID
</code></pre></div><p>Example output:</p>
<div class="highlight"><pre class="highlight json" tabindex="0"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"USER_GUID"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"userName"</span><span class="p">:</span><span class="w"> </span><span class="s2">"000000000000000000000"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"familyName"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Jeff"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"givenName"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Jefferson"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"emails"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="nl">"value"</span><span class="p">:</span><span class="w"> </span><span class="s2">"jeff.jefferson@example.com"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"primary"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div>